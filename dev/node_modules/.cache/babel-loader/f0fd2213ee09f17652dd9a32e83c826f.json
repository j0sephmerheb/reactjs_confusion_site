{"ast":null,"code":"var _jsxFileName = \"/home/joem/Data/git_environment/reactjs/confusion/src/components/dishDetailComoponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\n\nclass DishDetail extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderDish(dish) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, dish.description)));\n  }\n\n  renderComments(comments) {\n    const comment = comments.map(comment => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, comment.comment), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"blockquote-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, comment.author, \", \", comment.date));\n    });\n\n    if (comments === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Comments\"), comment);\n    }\n  }\n\n  render() {\n    if (this.props.dish === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, this.renderDish(this.props.dish)), this.renderComments(this.props.dish.comments));\n    }\n\n    ;\n  }\n\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/joem/Data/git_environment/reactjs/confusion/src/components/dishDetailComoponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","DishDetail","constructor","props","renderDish","dish","image","name","description","renderComments","comments","comment","map","author","date","render"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,cAAvB,EAAuCC,QAAvC,EAAiDC,QAAjD,EAA2DC,SAA3D,QAA2E,YAA3E;;AAGA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACjCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZ,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,MAAA,GAAG,EAAED,IAAI,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACE,IAAjB,CADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWF,IAAI,CAACG,WAAhB,CAFF,CAFF,CADF;AASH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAU;AACtB,UAAMC,OAAO,GAAGD,QAAQ,CAACE,GAAT,CAAcD,OAAD,IAAW;AACtC,0BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAACA,OAAb,CADF,eAEE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCA,OAAO,CAACE,MAA3C,QAAqDF,OAAO,CAACG,IAA7D,CAFF,CADF;AAMD,KAPe,CAAhB;;AASA,QAAGJ,QAAQ,KAAK,IAAhB,EAAqB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGC,OAFH,CADF;AAMD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKZ,KAAL,CAAWE,IAAX,KAAoB,IAAvB,EAA4B;AAC1B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,UAAL,CAAgB,KAAKD,KAAL,CAAWE,IAA3B,CADH,CADF,EAIG,KAAKI,cAAL,CAAoB,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,QAApC,CAJH,CADF;AAQD;;AAAA;AACF;;AApDgC;;AAwDnC,eAAeT,UAAf","sourcesContent":["\nimport React, {Component} from 'react';\nimport {Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle} from 'reactstrap';\n\n\nclass DishDetail extends Component {\n  constructor(props){\n    super(props);\n  };\n\n  renderDish(dish){\n      return (\n        <Card>\n          <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n      )\n  };\n\n  renderComments(comments){\n    const comment = comments.map((comment)=>{\n      return (\n        <ul className=\"list-unstyled\">\n          <li>{comment.comment}</li>\n          <li className=\"blockquote-footer\">{comment.author}, {comment.date}</li>\n        </ul>\n      )\n    });\n\n    if(comments === null){\n      return <div></div>\n    } else {\n      return (\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4>Comments</h4>\n          {comment}\n        </div>\n      ); \n    }\n  };\n\n  render() {\n    if(this.props.dish === null){\n      return <div></div>\n    } else {\n      return (\n        <div className=\"row\">\n          <div className=\"col-12 col-md-5 m-1\"> \n            {this.renderDish(this.props.dish)} \n          </div>\n          {this.renderComments(this.props.dish.comments)} \n        </div>\n      )  \n    };\n  };\n\n}\n\nexport default DishDetail"]},"metadata":{},"sourceType":"module"}