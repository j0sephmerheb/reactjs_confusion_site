{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","cmnt","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","showModal","toggleModal","bind","handleSubmit","this","setState","values","rating","Button","color","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","xs","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","Component","DishDetail","required","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","md","size","offset","check","checkbox","RenderLeaders","leader","Media","left","middle","object","body","heading","designation","About","leaders","console","log","CardHeader","title","list","RenderCard","item","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leaderLoading","leaderErrMess","Header","toggleNav","handleLogin","isNavOpen","isModalOpen","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","outline","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","addLeaders","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6c7b969.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({ dish }) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem,\n    Row, Button, Label, Col, Modal, ModalHeader, ModalBody\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nfunction RenderDish({ dish }) {\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    )\n}\n\n\nfunction RenderComments({ comments, postComment, dishId }) {\n    if (comments != null) {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                    <Stagger in>\n                        {comments.map((cmnt) => {\n                            return (\n                                <Fade in>\n                                    <li key={cmnt.id} >\n                                        <p>{cmnt.comment}</p>\n                                        <p>\n                                            -- {cmnt.author} ,\n                                    {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(cmnt.date)))}\n                                        </p>\n                                    </li>\n                                </Fade>\n                            );\n                        })}\n                    </Stagger>\n                </ul>\n\n                <CommentForm dishId={dishId} postComment={postComment} />\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>No Comments</div>\n        );\n    }\n}\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    toggleModal() {\n        this.setState({\n            showModal: !this.state.showModal\n        })\n    }\n\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Button color=\"outline-dark\" onClick={this.toggleModal}><i className=\"fa fa-pencil\"></i> Submit Comment</Button>\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Submit Comment\n                        </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\n                                <Col xs={12}>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" xs={12}>Your Name</Label>\n                                <Col xs={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" xs={12}>Comment</Label>\n                                <Col xs={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col xs={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                        </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDish dish={props.dish} />\n                    <RenderComments comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id}\n                    />\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div></div>\n        )\n    }\n}\n\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Row, Button, Label, Col } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"8\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\nimport { Loading } from './LoadingComponent';\n\nfunction RenderLeaders({ leader, isLoading, errMess }) {\n    return(\n        <Fade in>\n            <Media>\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\n                </Media>\n                <Media body className=\"ml-5\">\n                    <Media heading>{leader.name}</Media>\n                    <p>{leader.designation}</p>\n                    <div>{leader.description}</div>\n                </Media>\n            </Media>\n        </Fade>\n    );\n}\n\nfunction About(props) {\n    const leaders = props.leaders.leaders.map((leader) => {\n        console.log(props.leaders.isLoading);\n        if (props.leaders.isLoading) {\n            return (\n                <Loading />\n            );\n        }\n        else if (props.leaders.errMess) {\n            return (\n                <h4>{props.leaders.errMess}</h4>\n            );\n        }\n        else {\n            return (\n                <div key={leader.id} className=\"col-12 mb-4\">\n                    <RenderLeaders leader={leader} />\n                </div>\n            );\n        }\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({ item, isLoading, errMess }) {\n  if (isLoading) {\n    return (\n      <Loading />\n    );\n  }\n  else if (errMess) {\n    return (\n      <h4>{errMess}</h4>\n    );\n  }\n  else\n    return (\n      <FadeTransform\n        in\n        transformProps={{\n          exitTransform: 'scale(0.5) translateY(-50%)'\n        }}>\n        <Card>\n          <CardImg src={baseUrl + item.image} alt={item.name} />\n          <CardBody>\n            <CardTitle>{item.name}</CardTitle>\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n            <CardText>{item.description}</CardText>\n          </CardBody>\n        </Card>\n      </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-start\">\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home; ","import React, { Component } from 'react';\nimport {\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.state = {\n            isNavOpen: false\n        };\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen,\n            isModalOpen: false\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\n\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message:message\n    };\n    newFeedback.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n        dispatch(addFeedback(response));\n        alert(JSON.stringify(response));\n    })\n    .catch(error => { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n};","export const DISHES_LOADING = 'DISHES_LOADING';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_FAILED = 'DISHES_FAILED';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport Home from './HomeComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))    \n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    onDishSelect(dishId) {\n        this.setState({ selectedDish: dishId });\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}                    \n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        }\n\n        const DishWithId = ({ match }) => {\n            return (\n                <DishDetail \n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        };\n\n        const AboutPage = () => {\n            return (\n                <About\n                    leaders={this.props.leaders}                 \n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Header />\n                <div>\n                    <TransitionGroup>\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                            <Switch location={this.props.location}>\n                                <Route path='/home' component={HomePage} />\n                                <Route exact path='/aboutus' component={AboutPage} />\n                                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                                <Route path='/menu/:dishId' component={DishWithId} />\n                                <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                                <Redirect to=\"/home\" />\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state, errMess: null, comments: action.payload };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state, errMess: action.payload };\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      return { ...state, comments: state.comments.concat(comment) };\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = { isLoading: true,\n    errMess: null,\n    leaders:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { InitialFeedback } from './forms';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}